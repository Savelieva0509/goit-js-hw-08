{"mappings":"AAAO,MASMA,EAAOC,IAClB,IACE,MAAMC,EAAkBC,aAAaC,QAAQH,GAC7C,OAA2B,OAApBC,OAA2BG,EAAYC,KAAKC,MAAML,GACzD,MAAOM,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,WAGhCC,EAASV,IACpB,IACEE,aAAaS,WAAWX,GACxB,MAAOO,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,WCjBvCG,EAAUC,SAASC,cAAc,mBAoBvC,WACE,MAAMC,EAAWhB,EApBQ,uBAsBzB,IAAKgB,EACH,OAEFC,OAAOC,QAAQF,GAAUG,SAAQ,EAAEC,EAAMC,MACvCR,EAAQS,SAASF,GAAMC,MAAQA,KAvBnCE,GAuCAV,EAAQW,iBAAiB,UAZJC,IACnBA,EAAMC,iBAEN,MACEJ,UAAUK,MAAEA,EAAKjB,QAAEA,IACjBe,EAAMG,cAEVnB,QAAQoB,IAAI,CAAEF,MAAOA,EAAMN,MAAOX,QAASA,EAAQW,QACnDI,EAAMG,cAAcE,QACpBnB,EAvCyB","sources":["src/js/storage.js","src/js/03-feedback.js"],"sourcesContent":["export const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nexport const load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\nexport const remove = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};","'use strict';\n\n// import throttle from 'lodash.throttle';\n\nconst formRef = document.querySelector('.feedback-form')\nconst LOCALE_STORAGE_KEY = \"feedback-form-state\"\nimport { save, load, remove } from './storage'\n\ninitPage();\n\nconst onFormInput = event => {\n  const { name, value } = event.target;\n\n  let saveData = load(LOCALE_STORAGE_KEY);\n  saveData = saveData ? saveData : {};\n\n  saveData[name] = value;\n\n  save(LOCALE_STORAGE_KEY, saveData);\n};\n\n// const throttledOnFormInput = throttle(onFormInput, 300);\n// formRef.addEventListener('input', throttledOnFormInput);\n\nfunction initPage() {\n  const saveData = load(LOCALE_STORAGE_KEY);\n\n  if (!saveData) {\n    return;\n  }\n  Object.entries(saveData).forEach(([name, value]) => {\n    formRef.elements[name].value = value;\n  });\n}\n\nconst handleSubmit = event => {\n  event.preventDefault();\n\n  const {\n    elements: { email, message },\n  } = event.currentTarget;\n\n  console.log({ email: email.value, message: message.value });\n  event.currentTarget.reset();\n  remove(LOCALE_STORAGE_KEY);\n};\n\nformRef.addEventListener('submit', handleSubmit);\n"],"names":["$3fff5e8daf4b13a6$export$11e63f7b0f3d9900","key","serializedState","localStorage","getItem","undefined","JSON","parse","error","console","message","$3fff5e8daf4b13a6$export$cd7f480d6b8286c3","removeItem","$945622fd0f572e60$var$formRef","document","querySelector","saveData","Object","entries","forEach","name","value","elements","$945622fd0f572e60$var$initPage","addEventListener","event","preventDefault","email","currentTarget","log","reset"],"version":3,"file":"03-feedback.6688076b.js.map"}